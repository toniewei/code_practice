/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int res;
    public int longestUnivaluePath(TreeNode root) {
        this.res = 0;
        if (root==null) return 0;
        helper(root);
        return this.res-1;
    }
    
    private int helper(TreeNode root){
        
        if (root==null) return 0;
        
        int tmp = 1;
        int left = helper(root.left);
        int right = helper(root.right);
        
        if (root.left!=null && root.left.val == root.val) tmp+=left;
        if (root.right!=null && root.right.val == root.val) tmp+=right;
        
        this.res = Math.max(this.res,tmp);
        
        if (left!=0 && right!=0 && root.val == root.left.val && root.val == root.right.val)
            return Math.max(left,right)+1;
        return tmp;
        
    }
}
