import java.util.ArrayList;
import java.util.List;

class Solution {
    List<List<Integer>> res;
    int target;
    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        this.res = new ArrayList<>();
        this.target = targetSum;
        helper(root,0,new ArrayList<>());
        return this.res;
    }

    private void helper(TreeNode root, int pathSum, List<Integer> path){
        
        if (root==null) return;

        if (pathSum+root.val == this.target && root.left == null && root.right == null){
            path.add(root.val);
            res.add(new ArrayList<>(path));
        }

        if (root.left != null){
            List<Integer> leftPath = new ArrayList<>(path);
            leftPath.add(root.val);
            helper(root.left,pathSum+root.val,leftPath);
        }
        
        if (root.right != null){
            List<Integer> rightPath = new ArrayList<>(path);
            rightPath.add(root.val);
            helper(root.right,pathSum+root.val,rightPath);
        }

    }
}
