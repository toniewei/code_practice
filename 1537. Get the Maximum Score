import java.util.*;

class Solution {
    public int maxSum(int[] nums1, int[] nums2) {
        Set<Integer> set1 = new HashSet<>();
        for (int num: nums1) set1.add(num);
        Set<Integer> common = new HashSet<>();
        for (int num: nums2) if (set1.contains(num)) common.add(num);
        long res = 0;
        
        int r1=nums1.length-1,r2=nums2.length-1;
        while (true){
            long temp1=0, temp2=0;
            while (r1>0 && !common.contains(nums1[r1])) {temp1+=nums1[r1--];}
            while (r2>0 && !common.contains(nums2[r2])) {temp2+=nums2[r2--];}
            
            
            res+=Math.max(temp1+(r1>=0?nums1[r1--]:0),temp2+(r2>=0?nums2[r2--]:0));
            
            res =  (long) (res%((long)1e9 + 7));
            
            if (r1 < 0 && r2 < 0) break;
        }
        return (int) res;
    }
}
