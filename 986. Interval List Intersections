class Solution {
    public int[][] intervalIntersection(int[][] firstList, int[][] secondList) {
        if (firstList.length == 0 || secondList.length == 0) return new int[0][0];

        int j=0,i=0;
        List<int[]> intervals = new ArrayList<>();
        while (i<firstList.length && j < secondList.length){
            if (firstList[i][1]<secondList[j][0]) i++;
            else if (firstList[i][0] > secondList[j][1]) j++;
            else {
                intervals.add(intersect(firstList[i],secondList[j]));
                if (firstList[i][1]<secondList[j][1]) i++;
                else j++;
            }
        }

        int[][] ans = new int[intervals.size()][2];
        for (int k=0;k<intervals.size();k++) ans[k] = intervals.get(k);
        return ans;
    }

    private int[] intersect(int[] f, int[] s){

        return new int[]{Math.max(f[0],s[0]),Math.min(f[1],s[1])};
    }
}
