class Solution {
    Map<String,List<List<String>>> map = new HashMap<>();
    private boolean isPalidrome(String s){
        int i=0,j=s.length()-1;
        while(i<j){
            if (s.charAt(i++)!=s.charAt(j--)) return false;
        }
        return true;
    }
    public List<List<String>> partition(String s) {
        
        if (map.containsKey(s)) return map.get(s);
        List<List<String>> res = new ArrayList<>();
        for(int i=1;i<s.length();i++){
            String word = s.substring(0,i);
            if (isPalidrome(word)){
                List<List<String>> rightSol = partition(s.substring(i));
                for (List<String> lst: rightSol){
                    List<String> single = new ArrayList<String>(Collections.singleton(word));
                    single.addAll(lst);
                    res.add(single);
                }
            }
        }
         if (isPalidrome(s)){
            res.add(new ArrayList<String>(Collections.singleton(s)));
        }
        map.put(s,res);
        return res;
    }
}
